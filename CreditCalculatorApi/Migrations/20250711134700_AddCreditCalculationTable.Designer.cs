// <auto-generated />
using System;
using CreditCalculatorApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CreditCalculatorApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250711134700_AddCreditCalculationTable")]
    partial class AddCreditCalculationTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CreditCalculatorApi.Entities.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("CreditCalculatorApi.Entities.CreditApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CreditAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CreditTerm")
                        .HasColumnType("int");

                    b.Property<string>("CreditType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MonthlyIncome")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RiskStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CreditApplications");
                });

            modelBuilder.Entity("CreditCalculatorApi.Entities.CreditCalculation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AylikTaksit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FaizOrani")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("HesaplamaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("KrediTutari")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ToplamOdeme")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Vade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CreditCalculations");
                });
#pragma warning restore 612, 618
        }
    }
}
